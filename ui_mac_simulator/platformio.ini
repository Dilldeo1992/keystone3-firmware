; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = emulator_64bits
src_path = ../src
lvgl_path = ../external/lvgl/src

; Shared options
[env]
build_flags =
  ; Don't use lv_conf.h. Tweak params via platfom.ini.
  ; -D LV_CONF_SKIP
  ; -D LV_CONF_INCLUDE_SIMPLE
  -D COMPILE_SIMULATOR
  -D COMPILE_MAC_SIMULATOR
  -I../external/
  -I../external/cjson
  -I../external/ccan
  -I../external/lvgl/
  -I../external/lvgl/src
  -I../external/lvgl/src/hal
  -I../src
  -I../src/driver
  -I../src/utils
  -I../src/utils/log
  -I../src/config
  -I../src/error_codes
  -I../src/ui/lv_i18n
  -I../src/ui/wallet
  -I../src/ui/gui_frame
  -I../src/ui/gui_analyze
  -I../src/ui/gui_assets
  -I../src/ui/gui_assets/abi
  -I../src/ui/gui_chain
  -I../src/ui/gui_components
  -I../src/ui/gui_frame
  -I../src/ui/gui_model
  -I../src/ui/gui_views
  -I../src/ui/gui_widgets
  -I../src/ui/gui_widgets/setting
  -I../src/webusb_protocol
  -I../src/webusb_protocol/services
  -I../src/webusb_protocol/eapdu_services
  -I../src/msg
  -I../src/ram
  -I../src/tasks
  -I../src/crypto
  -I../src/crypto/checksum
  -I../src/crypto/bips
  -I../src/crypto/slip39
  -I../src/managers
  -I../src/firmware
  -I../src/hardware_interface
  -I../ui_simulator/LVGL.Simulator
  -I./src/lib/rust
  -Isrc/lib/lv_drivers
  -Isrc/lib/lv_drivers/sdl2
  -I/opt/homebrew/include
  -L/opt/homebrew/opt/sdl2/lib
  -L./lib
  ; Enable LVGL demo, remove when working on your own project
  ; -D LV_USE_DEMO_WIDGETS=1
  ; Add more defines below to overide lvgl:/src/lv_conf_simple.h
; lib_deps =
  ; Use direct URL, because package registry is unstable
  ;lvgl@~7.11.0
  ; lvgl=https://github.com/lvgl/lvgl/archive/refs/tags/v8.3.0.zip
lib_archive = false


[env:emulator_64bits]
platform = native@^1.1.3
extra_scripts = support/sdl2_build_extra.py
build_type = debug
build_flags =
  ${env.build_flags}
  ; -D LV_LOG_LEVEL=LV_LOG_LEVEL_INFO
  -D LV_LOG_PRINTF=1
  ; Add recursive dirs for hal headers search
  !python -c "import os; print(' '.join(['-I {}'.format(i[0].replace('\x5C','/')) for i in os.walk('hal/sdl2')]))"
  -lwindows
  -lSDL2
  ; SDL drivers optionsss
  -D LV_LVGL_H_INCLUDE_SIMPLE
  -D LV_DRV_NO_CONF
  -D USE_SDL
  -D SDL_HOR_RES=480
  -D SDL_VER_RES=800  
  -D SDL_ZOOM=1
  -D SDL_INCLUDE_PATH="\"SDL2/SDL.h\""

lib_deps =
  ${env.lib_deps}
  ; Use direct URL, because package registry is unstable
  ;lv_drivers@~7.9.0
  ; lv_drivers=https://github.com/lvgl/lv_drivers/archive/refs/tags/v8.3.0.zip
build_src_filter =
  +<../src/main.c>
  +<../src/lib/lv_drivers/*>
  +<../src/lib/simulator_model.c>
  +<../hal/sdl2>
  +<../../external/lvgl/*>
  +<../../src/ui/*>
  +<../../src/config/*>
  +<../../src/crypto/secret_cache.c>
  +<../../src/utils/assert.c>
  +<../../src/utils/user_utils.c>
  +<../../external/ccan/*>
  +<../../external/cjson/*>
  +<{src_path}/managers/*>
  ; Force compile LVGL demo, remove when working on your own project
  ; +<../.pio/libdeps/emulator_64bits/lvgl/demos>
